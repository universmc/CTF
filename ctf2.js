const fs = require("fs");
const Groq = require("groq-sdk");
const groq = new Groq();
const db = new Groq({});

async function main() {
  // Liste des CTFs avec leurs d√©tails
  const CTFs = [
    {
      "id": 2,
      "title": "Boot_X- - Trafic d'influence et commerce l√©gal de fonctionnaires d'√âtat",
      "Description": "Enqu√™te sur l'√©vasion fiscale et la TVA li√©es √† la boutique officielle de l'√âlys√©e et √† d'autres activit√©s commerciales l√©gales de fonctionnaires d'√âtat.",
      "objective": "Analyser les pratiques fiscales potentiellement frauduleuses et √©valuer les relations entre les partis politiques et les sponsors affili√©s.",
      "tasks": [
      "√âtablir une liste compl√®te des produits vendus sur la boutique officielle de l'√âlys√©e, boutique.elysee.fr.",
      "√âtudier la comptabilit√© des partis politiques en relation avec les sponsors et les activit√©s de la boutique.",
      "Identifier les marques et les entreprises impliqu√©es dans les transactions sur la boutique et leurs liens avec des partis politiques ou des fonctionnaires d'√âtat.",
      "Examiner les possibilit√©s d'√©vasion fiscale et de fraude √† la TVA dans le cadre des activit√©s commerciales de la boutique et des partis politiques."
      ],
      "phases": [
      "Recherche - Collecte de donn√©es et informations disponibles sur la boutique officielle de l'√âlys√©e, les produits vendus, les sponsors, les partis politiques et les fonctionnaires d'√âtat concern√©s.",
      "Analyse - Examen des transactions, des pratiques fiscales et des liens entre les partis politiques, les sponsors et les entreprises commerciales.",
      "Rapport - R√©daction d'un rapport d'enqu√™te r√©sumant les r√©sultats, les constats et les recommandations pour une meilleure transparence et un renforcement de la lutte contre la fraude."
      ]
      }
  ];

  // Exemple d'algorithme pour g√©n√©rer la documentation
  for (const ctf of CTFs) {
    const ctfDetails = `
# ${ctf.title}
# ${ctf.Description}
**Objectif**: ${ctf.objective}
**Phases**: ${ctf.phases.join(", ")}

## T√¢ches
${ctf.tasks.map((task, index) => `- ${index + 1}. ${task}`).join("\n")}

---
    `;

    const chatCompletion = await groq.chat.completions.create({
      messages: [
        {
          role: "system",
          name: "[üìî.codex]",
          content: "phase[00]:[DATE]:[initialisation des variables dans contexte D'une enqu√™te parlementaire]",
        },
      ],
      model: "gemma2-9b-it",
      temperature: 0.5,
      max_tokens: 2024,
      top_p: 1,
      stop: null,
      stream: false,
    });

    const mdContent = chatCompletion.choices[0]?.message?.content;
    const fileName = `CTF_${ctf.id}_${ctf.title.replace(/ /g, "_")}.md`;
    fs.writeFileSync(fileName, ctfDetails + mdContent);
    console.log(`Documentation g√©n√©r√©e : ${fileName}`);
  }

  console.log("Toutes les documentations des CTF ont √©t√© g√©n√©r√©es avec succ√®s !");
}

main();